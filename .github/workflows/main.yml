name: Build and Deploy Angular app to AWS Elastic Beanstalk

on:
  push:
    branches:
      - dev
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: 'us-east-1' # Replace with your AWS region
  AWS_ELASTIC_BEANSTALK_APPLICATION_NAME: 'angular-app-uat' # Replace with your Elastic Beanstalk application name
  AWS_ELASTIC_BEANSTALK_ENVIRONMENT_NAME: 'angular-app-uat-env' # Replace with your Elastic Beanstalk environment name
  NODE_VERSION: '16.x' # Replace with your desired Node.js version
  EB_VERSION_LABEL: 'Sample' # Replace with the expected version label

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Build Angular app
        run: npm run build --if-present

      - name: Create dist directory
        run: mkdir dist

      - name: Copy build artifacts to dist directory
        run: cp -r * dist/
        working-directory: ./dist/

      - name: Zip artifact for deployment
        run: zip -r ../release.zip .
        working-directory: ./dist/

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: release
          path: release.zip

  deploy:
    name: Deploy to AWS Elastic Beanstalk
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: release

      - name: Deploy to AWS Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v15
        with:
          aws_access_key: ${{ env.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          region: ${{ env.AWS_REGION }}
          application_name: ${{ env.AWS_ELASTIC_BEANSTALK_APPLICATION_NAME }}
          environment_name: ${{ env.AWS_ELASTIC_BEANSTALK_ENVIRONMENT_NAME }}
          version_label: ${{ env.EB_VERSION_LABEL }} # Use the static version label here
          deployment_package: release.zip
